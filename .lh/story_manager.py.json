{
    "sourceFile": "story_manager.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1741256715214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741256737515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n from config import character, initial_likability\n-from dialogue_log import record_dialogue\n \n def main():\n     manager = StoryManager()\n     manager.start_story()\n"
                },
                {
                    "date": 1741256833641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,18 @@\n from config import character, initial_likability\n+from dialogue_log import DialogueLog\n+from utils.nickname_manager import get_nickname\n+from events.event_progress_1 import progress_1_event\n+from events.event_progress_2 import progress_2_event\n+from events.event_progress_3 import progress_3_event\n \n-def main():\n-    manager = StoryManager()\n-    manager.start_story()\n+class StoryManager:\n+    def __init__(class NAMEFilter(admin.SimpleListFilter):\n     \n-if __name__ == \"__main__\":\n-    main()\n+        title = ''\n+        parameter_name = ''\n+    \n+        def lookups(self, request, model_admin):\n+            pass\n+    \n+        def queryset(self, request, queryset):\n+            return queryset)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741257284686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,37 @@\n from events.event_progress_2 import progress_2_event\n from events.event_progress_3 import progress_3_event\n \n class StoryManager:\n-    def __init__(class NAMEFilter(admin.SimpleListFilter):\n-    \n-        title = ''\n-        parameter_name = ''\n-    \n-        def lookups(self, request, model_admin):\n-            pass\n-    \n-        def queryset(self, request, queryset):\n-            return queryset)\n\\ No newline at end of file\n+    def __init__(self):\n+        self.likability = initial_likability\n+        self.progress = 1\n+        self.dialogue_log = DialogueLog()\n+        \n+        def start_story(self):\n+            self.introduce_character()\n+            while self.progress <= 3:\n+                self.progress_event()\n+            self.dialogue_log.print_dialogue(self.likability)\n+        \n+        def introduce_character(self):\n+            print(\"---------------------------------------------------------------\")\n+            for key, value in character.item():\n+                print(f\"{key}: {value}\")\n+                print(\"---------------------------------------------------------------\")\n+            print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n+            print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n+            \n+            def run_progress(self):\n+                if self.progress ==1:\n+                    result = progress_1_event(self.likability)\n+                elif self.progress ==2:\n+                    result = progress_2_event(self.likability)\n+                else: \n+                    result = progress_3_event(self.likability)\n+                    \n+                self.likability += result.favor_change\n+                self.dialogue_log.record(result)\n+                slef.progress += 1\n+            \n+            \n+                    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741270795301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,8 @@\n                     result = progress_3_event(self.likability)\n                     \n                 self.likability += result.favor_change\n                 self.dialogue_log.record(result)\n-                slef.progress += 1\n+                self.progress += 1\n             \n             \n                     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741270968526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from config import character, initial_likability\n from dialogue_log import DialogueLog\n-from utils.nickname_manager import get_nickname\n+from story_content.nickname_manager import get_nickname\n from events.event_progress_1 import progress_1_event\n from events.event_progress_2 import progress_2_event\n from events.event_progress_3 import progress_3_event\n \n"
                },
                {
                    "date": 1741270991305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n from config import character, initial_likability\n from dialogue_log import DialogueLog\n-from story_content.nickname_manager import get_nickname\n+from story_content import get_nickname\n from events.event_progress_1 import progress_1_event\n from events.event_progress_2 import progress_2_event\n from events.event_progress_3 import progress_3_event\n \n"
                },
                {
                    "date": 1741271755502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,32 +10,32 @@\n         self.likability = initial_likability\n         self.progress = 1\n         self.dialogue_log = DialogueLog()\n         \n-        def start_story(self):\n-            self.introduce_character()\n-            while self.progress <= 3:\n-                self.progress_event()\n-            self.dialogue_log.print_dialogue(self.likability)\n+    def start_story(self):\n+        self.introduce_character()\n+        while self.progress <= 3:\n+            self.progress_event()\n+        self.dialogue_log.print_dialogue(self.likability)\n+    \n+    def introduce_character(self):\n+        print(\"---------------------------------------------------------------\")\n+        for key, value in character.item():\n+            print(f\"{key}: {value}\")\n+            print(\"---------------------------------------------------------------\")\n+        print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n+        print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n         \n-        def introduce_character(self):\n-            print(\"---------------------------------------------------------------\")\n-            for key, value in character.item():\n-                print(f\"{key}: {value}\")\n-                print(\"---------------------------------------------------------------\")\n-            print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n-            print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n-            \n-            def run_progress(self):\n\\ No newline at end of file\n-                if self.progress ==1:\n-                    result = progress_1_event(self.likability)\n-                elif self.progress ==2:\n-                    result = progress_2_event(self.likability)\n-                else: \n-                    result = progress_3_event(self.likability)\n-                    \n-                self.likability += result.favor_change\n-                self.dialogue_log.record(result)\n-                self.progress += 1\n-            \n-            \n-                    \n+        def run_progress(self):\n+            if self.progress ==1:\n+                result = progress_1_event(self.likability)\n+            elif self.progress ==2:\n+                result = progress_2_event(self.likability)\n+            else: \n+                result = progress_3_event(self.likability)\n+                \n+            self.likability += result.favor_change\n+            self.dialogue_log.record(result)\n+            self.progress += 1\n+        \n+        \n+                \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741271767522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         self.dialogue_log.print_dialogue(self.likability)\n     \n     def introduce_character(self):\n         print(\"---------------------------------------------------------------\")\n-        for key, value in character.item():\n+        for key, value in character.items():\n             print(f\"{key}: {value}\")\n             print(\"---------------------------------------------------------------\")\n         print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n         print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n"
                },
                {
                    "date": 1741271798582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,18 +24,18 @@\n             print(\"---------------------------------------------------------------\")\n         print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n         print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n         \n-        def run_progress(self):\n-            if self.progress ==1:\n-                result = progress_1_event(self.likability)\n-            elif self.progress ==2:\n-                result = progress_2_event(self.likability)\n-            else: \n-                result = progress_3_event(self.likability)\n-                \n-            self.likability += result.favor_change\n-            self.dialogue_log.record(result)\n-            self.progress += 1\n+    def run_progress(self):\n+        if self.progress ==1:\n+            result = progress_1_event(self.likability)\n+        elif self.progress ==2:\n+            result = progress_2_event(self.likability)\n+        else: \n+            result = progress_3_event(self.likability)\n+            \n+        self.likability += result.favor_change\n+        self.dialogue_log.record(result)\n+        self.progress += 1\n         \n         \n                 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741271882291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         \n     def start_story(self):\n         self.introduce_character()\n         while self.progress <= 3:\n-            self.progress_event()\n+            self.run_progress()\n         self.dialogue_log.print_dialogue(self.likability)\n     \n     def introduce_character(self):\n         print(\"---------------------------------------------------------------\")\n"
                },
                {
                    "date": 1741271917288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n     def introduce_character(self):\n         print(\"---------------------------------------------------------------\")\n         for key, value in character.items():\n             print(f\"{key}: {value}\")\n-            print(\"---------------------------------------------------------------\")\n         print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n         print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n         \n     def run_progress(self):\n"
                },
                {
                    "date": 1741272024920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         else: \n             result = progress_3_event(self.likability)\n             \n         self.likability += result.favor_change\n-        self.dialogue_log.record(result)\n+        self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n         \n         \n                 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741274165106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,11 @@\n         elif self.progress ==2:\n             result = progress_2_event(self.likability)\n         else: \n             result = progress_3_event(self.likability)\n+        \n+        for line in result.reaction:\n+            print(line)\n             \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n"
                },
                {
                    "date": 1741276492850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,11 @@\n             result = progress_2_event(self.likability)\n         else: \n             result = progress_3_event(self.likability)\n         \n-        for line in result.reaction:\n-            print(line)\n+        # 逐行打印对话序列（dialogue_sequence）\n+        for entry in result.dialogue_sequence:\n+            print(f\"{entry['speaker']}：{entry['line']}\")\n             \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n"
                },
                {
                    "date": 1741278509656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,13 @@\n             result = progress_3_event(self.likability)\n         \n         # 逐行打印对话序列（dialogue_sequence）\n         for entry in result.dialogue_sequence:\n-            print(f\"{entry['speaker']}：{entry['line']}\")\n+            if entry[\"speaker\"] == \"Narrator\":\n+                print(entry[\"line\"])  # 旁白不要带\"Narrator\"\n+            else:\n+                print(f\"{entry['speaker']}：{entry['line']}\")  # 其他角色用中文名\n+\n             \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n"
                },
                {
                    "date": 1741278947144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,11 @@\n             result = progress_3_event(self.likability)\n         \n         # 逐行打印对话序列（dialogue_sequence）\n         for entry in result.dialogue_sequence:\n-            if entry[\"speaker\"] == \"Narrator\":\n-                print(entry[\"line\"])  # 旁白不要带\"Narrator\"\n-            else:\n-                print(f\"{entry['speaker']}：{entry['line']}\")  # 其他角色用中文名\n+            print(entry[\"line\"]) \n \n+\n             \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n"
                },
                {
                    "date": 1741279273431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,23 +24,28 @@\n         print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n         print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n         \n     def run_progress(self):\n-        if self.progress ==1:\n+        if self.progress == 1:\n             result = progress_1_event(self.likability)\n-        elif self.progress ==2:\n+        elif self.progress == 2:\n             result = progress_2_event(self.likability)\n-        else: \n+        else:\n             result = progress_3_event(self.likability)\n-        \n-        # 逐行打印对话序列（dialogue_sequence）\n+\n+        # 每条对话正常打印\n         for entry in result.dialogue_sequence:\n-            print(entry[\"line\"]) \n+            if entry[\"speaker\"] == \"Narrator\":\n+                print(entry[\"line\"])\n+            else:\n+                print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n \n+        # 加一个空行，作为Progress之间的分隔\n+        print(\"\\n\")\n \n-            \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n+\n         \n         \n                 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741279448777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n                 print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n \n         # 加一个空行，作为Progress之间的分隔\n         print(\"\\n\")\n+        print(\"---------------------------------------------------------------\")\n \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n         self.progress += 1\n"
                },
                {
                    "date": 1741279460864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,8 @@\n             else:\n                 print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n \n         # 加一个空行，作为Progress之间的分隔\n-        print(\"\\n\")\n         print(\"---------------------------------------------------------------\")\n \n         self.likability += result.favor_change\n         self.dialogue_log.record_log_pool(result)\n"
                },
                {
                    "date": 1741280356808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         print(\"---------------------------------------------------------------\")\n         for key, value in character.items():\n             print(f\"{key}: {value}\")\n         print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n-        print(f\"{character['name']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n+        print(f\"{character['姓名']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n         \n     def run_progress(self):\n         if self.progress == 1:\n             result = progress_1_event(self.likability)\n"
                },
                {
                    "date": 1741280458602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,22 @@\n         self.dialogue_log.print_dialogue(self.likability)\n     \n     def introduce_character(self):\n         print(\"---------------------------------------------------------------\")\n+        print(\"【人物档案】\\n\")\n         for key, value in character.items():\n-            print(f\"{key}: {value}\")\n-        print(f\"「{get_nickname(self.likability)}，好久不见。」\")\n+            print(f\"{key}：{value}\")\n+        print(\"\\n---------------------------------------------------------------\\n\")\n+\n+        print(\"「猫咪小姐，好久不见。」\\n\")\n         print(f\"{character['姓名']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n+\n+        print(\"---------------------------------------------------------------\")\n+        print(\"【选项】\")\n+        print(\"1. 表示疑惑\")\n+        print(\"2. 点头微笑\")\n+        print(\"3. 直接反驳\")\n+\n         \n     def run_progress(self):\n         if self.progress == 1:\n             result = progress_1_event(self.likability)\n"
                },
                {
                    "date": 1741280665068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,14 @@\n         elif self.progress == 2:\n             result = progress_2_event(self.likability)\n         else:\n             result = progress_3_event(self.likability)\n+            \n+        # 如果有过去剧情，先打印过去剧情\n+        if result.past_story:\n+            print(\"\\n【过去剧情】\")\n+            print(result.past_story)\n+            print()\n \n         # 每条对话正常打印\n         for entry in result.dialogue_sequence:\n             if entry[\"speaker\"] == \"Narrator\":\n"
                },
                {
                    "date": 1741474165301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,17 @@\n     def __init__(self):\n         self.likability = initial_likability\n         self.progress = 1\n         self.dialogue_log = DialogueLog()\n+        logger.info(\"Story Manager initialized.\")\n         \n     def start_story(self):\n+        logger.info(\"Story started.\")\n         self.introduce_character()\n         while self.progress <= 3:\n             self.run_progress()\n         self.dialogue_log.print_dialogue(self.likability)\n+        logger.info(\"Story ended.\")\n     \n     def introduce_character(self):\n         print(\"---------------------------------------------------------------\")\n         print(\"【人物档案】\\n\")\n"
                },
                {
                    "date": 1741474554606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n+import logging\n from config import character, initial_likability\n from dialogue_log import DialogueLog\n from story_content import get_nickname\n from events.event_progress_1 import progress_1_event\n from events.event_progress_2 import progress_2_event\n from events.event_progress_3 import progress_3_event\n \n+logger = logging.getLogger(__name__)\n class StoryManager:\n     def __init__(self):\n         self.likability = initial_likability\n         self.progress = 1\n"
                },
                {
                    "date": 1741474644702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n import logging\n-from config import character, initial_likability\n+from config import character, initial_likability, logger\n from dialogue_log import DialogueLog\n from story_content import get_nickname\n from events.event_progress_1 import progress_1_event\n from events.event_progress_2 import progress_2_event\n from events.event_progress_3 import progress_3_event\n \n logger = logging.getLogger(__name__)\n+\n class StoryManager:\n     def __init__(self):\n         self.likability = initial_likability\n         self.progress = 1\n"
                },
                {
                    "date": 1741521355236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,23 +8,32 @@\n \n logger = logging.getLogger(__name__)\n \n class StoryManager:\n+    \"\"\"\n+    故事管理器，负责整个故事的流程控制\n+    \"\"\"\n     def __init__(self):\n         self.likability = initial_likability\n         self.progress = 1\n         self.dialogue_log = DialogueLog()\n         logger.info(\"Story Manager initialized.\")\n         \n     def start_story(self):\n+        \"\"\"\n+        启动故事流程，依次运行剧情时间\n+        \"\"\"\n         logger.info(\"Story started.\")\n         self.introduce_character()\n         while self.progress <= 3:\n             self.run_progress()\n         self.dialogue_log.print_dialogue(self.likability)\n         logger.info(\"Story ended.\")\n     \n     def introduce_character(self):\n+        \"\"\"\n+        介绍人物，打印人物档案和开场白\n+        \"\"\"\n         print(\"---------------------------------------------------------------\")\n         print(\"【人物档案】\\n\")\n         for key, value in character.items():\n             print(f\"{key}：{value}\")\n"
                },
                {
                    "date": 1741521427498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,12 @@\n         print(\"3. 直接反驳\")\n \n         \n     def run_progress(self):\n+        \"\"\"\n+        运行剧情进程，根据进度调用不同的事件处理函数\n+        \"\"\"\n+        \n         if self.progress == 1:\n             result = progress_1_event(self.likability)\n         elif self.progress == 2:\n             result = progress_2_event(self.likability)\n"
                },
                {
                    "date": 1741529936683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,86 +1,8 @@\n-import logging\n-from config import character, initial_likability, logger\n-from dialogue_log import DialogueLog\n-from story_content import get_nickname\n-from events.event_progress_1 import progress_1_event\n-from events.event_progress_2 import progress_2_event\n-from events.event_progress_3 import progress_3_event\n-\n-logger = logging.getLogger(__name__)\n-\n class StoryManager:\n-    \"\"\"\n-    故事管理器，负责整个故事的流程控制\n-    \"\"\"\n     def __init__(self):\n-        self.likability = initial_likability\n-        self.progress = 1\n+        self.character_handler = CharacterHandler(character)\n         self.dialogue_log = DialogueLog()\n-        logger.info(\"Story Manager initialized.\")\n-        \n+\n     def start_story(self):\n-        \"\"\"\n-        启动故事流程，依次运行剧情时间\n-        \"\"\"\n         logger.info(\"Story started.\")\n-        self.introduce_character()\n-        while self.progress <= 3:\n-            self.run_progress()\n-        self.dialogue_log.print_dialogue(self.likability)\n-        logger.info(\"Story ended.\")\n-    \n-    def introduce_character(self):\n-        \"\"\"\n-        介绍人物，打印人物档案和开场白\n-        \"\"\"\n-        print(\"---------------------------------------------------------------\")\n-        print(\"【人物档案】\\n\")\n-        for key, value in character.items():\n-            print(f\"{key}：{value}\")\n-        print(\"\\n---------------------------------------------------------------\\n\")\n-\n-        print(\"「猫咪小姐，好久不见。」\\n\")\n-        print(f\"{character['姓名']}检察官微微一笑，目光却如同探针般刺入你的内心。\\n\")\n-\n-        print(\"---------------------------------------------------------------\")\n-        print(\"【选项】\")\n-        print(\"1. 表示疑惑\")\n-        print(\"2. 点头微笑\")\n-        print(\"3. 直接反驳\")\n-\n-        \n-    def run_progress(self):\n-        \"\"\"\n-        运行剧情进程，根据进度调用不同的事件处理函数\n-        \"\"\"\n-        \n-        if self.progress == 1:\n-            result = progress_1_event(self.likability)\n-        elif self.progress == 2:\n-            result = progress_2_event(self.likability)\n-        else:\n-            result = progress_3_event(self.likability)\n-            \n-        # 如果有过去剧情，先打印过去剧情\n-        if result.past_story:\n-            print(\"\\n【过去剧情】\")\n-            print(result.past_story)\n-            print()\n-\n-        # 每条对话正常打印\n-        for entry in result.dialogue_sequence:\n-            if entry[\"speaker\"] == \"Narrator\":\n-                print(entry[\"line\"])\n-            else:\n-                print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n-\n-        # 加一个空行，作为Progress之间的分隔\n-        print(\"---------------------------------------------------------------\")\n-\n-        self.likability += result.favor_change\n-        self.dialogue_log.record_log_pool(result)\n-        self.progress += 1\n-\n-        \n\\ No newline at end of file\n-        \n-                \n+        self.character_handler.introduce_character()  # 现在从 CharacterHandler 里调用\n"
                },
                {
                    "date": 1741530102606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,68 @@\n+import logging\n+from config import logger\n+from dialogue_log import DialogueLog\n+from event_handler import EventHandler\n+from game_state import GameState\n+\n+logger = logging.getLogger(__name__)\n+\n class StoryManager:\n+    \"\"\"\n+    故事管理器，负责整个故事的流程控制\n+    \"\"\"\n     def __init__(self):\n-        self.character_handler = CharacterHandler(character)\n+        \"\"\"\n+        初始化StoryManager, 家在游戏状态和对话日志\n+        \"\"\"\n+        self.game_state = GameState()\n         self.dialogue_log = DialogueLog()\n-\n+        self.event_handler = EventHandler()\n+        \n+        logger.info(\"Story Manager initialized.\")\n+        \n     def start_story(self):\n+        \"\"\"\n+        启动故事流程，依次运行剧情时间\n+        \"\"\"\n         logger.info(\"Story started.\")\n-        self.character_handler.introduce_character()  # 现在从 CharacterHandler 里调用\n+        self.introduce_character()\n+        while self.progress <= 3:\n+            self.run_progress()\n+        self.dialogue_log.print_dialogue(self.likability)\n+        logger.info(\"Story ended.\")\n+        \n+    def run_progress(self):\n+        \"\"\"\n+        运行剧情进程，根据进度调用不同的事件处理函数\n+        \"\"\"\n+        \n+        if self.progress == 1:\n+            result = progress_1_event(self.likability)\n+        elif self.progress == 2:\n+            result = progress_2_event(self.likability)\n+        else:\n+            result = progress_3_event(self.likability)\n+            \n+        # 如果有过去剧情，先打印过去剧情\n+        if result.past_story:\n+            print(\"\\n【过去剧情】\")\n+            print(result.past_story)\n+            print()\n+\n+        # 每条对话正常打印\n+        for entry in result.dialogue_sequence:\n+            if entry[\"speaker\"] == \"Narrator\":\n+                print(entry[\"line\"])\n+            else:\n+                print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n+\n+        # 加一个空行，作为Progress之间的分隔\n+        print(\"---------------------------------------------------------------\")\n+\n+        self.likability += result.favor_change\n+        self.dialogue_log.record_log_pool(result)\n+        self.progress += 1\n+\n+        \n+        \n+                \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741530210180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,26 +24,23 @@\n         \"\"\"\n         启动故事流程，依次运行剧情时间\n         \"\"\"\n         logger.info(\"Story started.\")\n-        self.introduce_character()\n-        while self.progress <= 3:\n+        self.game_state.introduce_character()\n+        \n+        while self.game_state.progress <= 3:\n             self.run_progress()\n+\n         self.dialogue_log.print_dialogue(self.likability)\n         logger.info(\"Story ended.\")\n         \n     def run_progress(self):\n         \"\"\"\n         运行剧情进程，根据进度调用不同的事件处理函数\n         \"\"\"\n         \n-        if self.progress == 1:\n-            result = progress_1_event(self.likability)\n-        elif self.progress == 2:\n-            result = progress_2_event(self.likability)\n-        else:\n-            result = progress_3_event(self.likability)\n-            \n+         result = self.event_handler.run_event(self.game_state.progress, self.game_state.likability)\n+        \n         # 如果有过去剧情，先打印过去剧情\n         if result.past_story:\n             print(\"\\n【过去剧情】\")\n             print(result.past_story)\n@@ -57,12 +54,10 @@\n                 print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n \n         # 加一个空行，作为Progress之间的分隔\n         print(\"---------------------------------------------------------------\")\n-\n-        self.likability += result.favor_change\n+        self.game_state.update(result)\n         self.dialogue_log.record_log_pool(result)\n-        self.progress += 1\n \n         \n         \n                 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741530501033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         \"\"\"\n         运行剧情进程，根据进度调用不同的事件处理函数\n         \"\"\"\n         \n-         result = self.event_handler.run_event(self.game_state.progress, self.game_state.likability)\n+        result = self.event_handler.run_event(self.game_state.progress, self.game_state.likability)\n         \n         # 如果有过去剧情，先打印过去剧情\n         if result.past_story:\n             print(\"\\n【过去剧情】\")\n"
                },
                {
                    "date": 1741530557086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 print(entry[\"line\"])  # 不要额外加角色名，保证台词自然\n \n         # 加一个空行，作为Progress之间的分隔\n         print(\"---------------------------------------------------------------\")\n-        self.game_state.update(result)\n+        self.game_state.update_state(result)\n         self.dialogue_log.record_log_pool(result)\n \n         \n         \n"
                },
                {
                    "date": 1741530624714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         \n         while self.game_state.progress <= 3:\n             self.run_progress()\n \n-        self.dialogue_log.print_dialogue(self.likability)\n+        self.dialogue_log.print_dialogue(self.game_state.likability)\n         logger.info(\"Story ended.\")\n         \n     def run_progress(self):\n         \"\"\"\n"
                },
                {
                    "date": 1741530641718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n         \"\"\"\n         初始化StoryManager, 家在游戏状态和对话日志\n         \"\"\"\n         self.game_state = GameState()\n+        self.game_state = GameState(initial_likability)\n         self.dialogue_log = DialogueLog()\n         self.event_handler = EventHandler()\n         \n         logger.info(\"Story Manager initialized.\")\n"
                },
                {
                    "date": 1741530650745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n     def __init__(self):\n         \"\"\"\n         初始化StoryManager, 家在游戏状态和对话日志\n         \"\"\"\n-        self.game_state = GameState()\n         self.game_state = GameState(initial_likability)\n         self.dialogue_log = DialogueLog()\n         self.event_handler = EventHandler()\n         \n"
                },
                {
                    "date": 1741530694804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import logging\n-from config import logger\n+from config import logger, initial_likability\n from dialogue_log import DialogueLog\n from event_handler import EventHandler\n from game_state import GameState\n \n"
                }
            ],
            "date": 1741256715214,
            "name": "Commit-0",
            "content": "from config import character, initial_likability\nfrom dialogue_log import record_dialogue\n\ndef main():\n    manager = StoryManager()\n    manager.start_story()\n    \nif __name__ == \"__main__\":\n    main()\n"
        }
    ]
}