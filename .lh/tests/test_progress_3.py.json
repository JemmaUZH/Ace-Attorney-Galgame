{
    "sourceFile": "tests/test_progress_3.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1741522743246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741540973071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import pytest\n-from events.progress_3_event import progress_3_event, EventResult\n+from unittest.mock import patch\n+from events.event_progress_3 import EventResult, sanitize_input, progress_2_event  # 替换 your_module_name\n+from story_content import get_nickname\n \n @pytest.mark.parametrize(\"likability, expected_choice, expected_favor_change\", [\n     (70, \"冷静分析证据\", 2),   # 高好感度 → +2\n     (50, \"冷静分析证据\", 1),   # 中等好感度 → +1\n"
                },
                {
                    "date": 1741541012052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import pytest\n from unittest.mock import patch\n-from events.event_progress_3 import EventResult, sanitize_input, progress_2_event  # 替换 your_module_name\n+from events.event_progress_3 import EventResult, sanitize_input, progress_2_event  \n from story_content import get_nickname\n \n @pytest.mark.parametrize(\"likability, expected_choice, expected_favor_change\", [\n     (70, \"冷静分析证据\", 2),   # 高好感度 → +2\n"
                },
                {
                    "date": 1741541128630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import pytest\n from unittest.mock import patch\n-from events.event_progress_3 import EventResult, sanitize_input, progress_2_event  \n+from events.event_progress_3 import EventResult, sanitize_input, progress_3_event  \n from story_content import get_nickname\n \n @pytest.mark.parametrize(\"likability, expected_choice, expected_favor_change\", [\n     (70, \"冷静分析证据\", 2),   # 高好感度 → +2\n"
                }
            ],
            "date": 1741522743246,
            "name": "Commit-0",
            "content": "import pytest\nfrom events.progress_3_event import progress_3_event, EventResult\n\n@pytest.mark.parametrize(\"likability, expected_choice, expected_favor_change\", [\n    (70, \"冷静分析证据\", 2),   # 高好感度 → +2\n    (50, \"冷静分析证据\", 1),   # 中等好感度 → +1\n    (40, \"冷静分析证据\", 0),   # 低好感度 → 0\n])\ndef test_progress_3_analyze_evidence(mocker, likability, expected_choice, expected_favor_change):\n    \"\"\"\n    测试玩家选择【冷静分析证据】时的输出。\n    \"\"\"\n    mocker.patch(\"builtins.input\", return_value=\"1\")  # 模拟用户输入 \"1\"\n\n    result = progress_3_event(likability)\n\n    assert isinstance(result, EventResult)\n    assert result.player_choice == expected_choice\n    assert result.favor_change == expected_favor_change\n    assert len(result.dialogue_sequence) > 0  # 确保对话有内容\n\n\n@pytest.mark.parametrize(\"likability, expected_choice, expected_favor_change\", [\n    (70, \"质问戈多的执着\", 1),\n    (50, \"质问戈多的执着\", 0),\n    (40, \"质问戈多的执着\", -1),\n])\ndef test_progress_3_question_godot(mocker, likability, expected_choice, expected_favor_change):\n    \"\"\"\n    测试玩家选择【质问戈多为什么回来】时的输出。\n    \"\"\"\n    mocker.patch(\"builtins.input\", return_value=\"2\")  # 模拟输入 \"2\"\n\n    result = progress_3_event(likability)\n\n    assert isinstance(result, EventResult)\n    assert result.player_choice == expected_choice\n    assert result.favor_change == expected_favor_change\n\n\n@pytest.mark.parametrize(\"likability\", [70, 50, 40])\ndef test_progress_3_defend_client(mocker, likability):\n    \"\"\"\n    测试玩家选择【坚定维护委托人】时的输出。\n    \"\"\"\n    mocker.patch(\"builtins.input\", return_value=\"3\")  # 模拟输入 \"3\"\n\n    result = progress_3_event(likability)\n\n    assert isinstance(result, EventResult)\n    assert result.player_choice == \"坚定维护委托人\"\n    assert result.favor_change == 0\n\n\ndef test_progress_3_invalid_input(mocker):\n    \"\"\"\n    测试无效输入（比如输入 \"abc\"）时是否默认进入沉默选项。\n    \"\"\"\n    mocker.patch(\"builtins.input\", return_value=\"invalid\")  # 模拟输入 \"invalid\"\n\n    result = progress_3_event(50)\n\n    assert isinstance(result, EventResult)\n    assert result.player_choice == \"沉默\"\n    assert result.favor_change == 0\n    assert len(result.dialogue_sequence) > 0\n"
        }
    ]
}